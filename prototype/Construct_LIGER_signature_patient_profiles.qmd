---
title: "Construct patient signature profiles"
format: html
editor: visual
---

```{r}
suppressPackageStartupMessages({
  library(magrittr)
  library(tidyverse)
  library(sjstats)
  library(ggpubr)
  library(tidyr)
})
```

```{r}
celltypes = read_csv("../resources/patient-profiles/compartment_celltypes.csv")

profile.flavor = "top-frequency"
condition = "validated"
compartment = "full"

celltypes = celltypes[[compartment]]
```

```{r}
sigprofile.dflist <- lapply(celltypes, function(ct) {
  result_dir = paste0("../output/v2/results/LIGER/signature-analysis/", ct, "/signature-loading-profiles/", condition, "/")
  
  sigprofile.df <- read_tsv(paste0(result_dir, ct, "-signature-loading-profiles-", profile.flavor, '-', condition, ".tsv"))
  #sigprofile.df$signature <- paste0(ct, " ", sigprofile.df$signature)
  
  # sigprofile.df <- sigprofile.df %>% 
  #   select(cohort, sample, signature, var.used) %>%
  #   pivot_wider(names_from = signature, values_from = var.used)
  
  sigprofile.df
})
names(sigprofile.dflist) <- celltypes
```

```{r}
# View(sigprofile.dflist$Mono)
sigprofile.df <- Reduce(function(df1, df2) full_join(df1, df2, by = c("cohort", "sample")), sigprofile.dflist)
```

```{r}
sigprofile.mtx <- sigprofile.df %>% 
  select(!c(cohort, sample)) %>%
  as.matrix()

summary(sigprofile.mtx %>% c())
```

```{r}
sigprofile.corr <- cor(sigprofile.mtx, use = "complete.obs")
```

# patient profile for the top frequency flavor (long form)
```{r}
sigprofile.df.long <- sigprofile.df %>%
  pivot_longer(cols = !contains("cohort") & !contains("sample"), names_to = "signature", values_to = "freq") %>%
  mutate(celltype = str_split(signature, pattern = " ", simplify = T)[,1])
```

# signature profile for the cell number with top signature flavor
```{r}
signum.dflist <- lapply(celltypes, function(ct) {
  result_dir = paste0("../output/v2/results/LIGER/signature-analysis/", ct, "/signature-loading-analysis/", condition, "/")
  sigfreq.df <- read_tsv(paste0(result_dir, ct, "-signature-top-frequency-", condition, ".tsv"))
  
  signum.df <- sigfreq.df %>% 
    mutate(across(starts_with(ct), ~ceiling(.*n_cells))) %>%
    rowwise() %>%
    mutate(sum = sum(across(starts_with(ct)), na.rm = T))
  signum.df
})
names(signum.dflist) <- celltypes

View(signum.dflist$B)

signum.dflist <- lapply(signum.dflist, function(df) {
  df <- df %>% select(-n_cells, -sum)
  df
})

View(signum.dflist$B)

signum.df <- Reduce(function(df1, df2) full_join(df1, df2, by = c("cohort", "sample")), signum.dflist)

signum.df.long <- signum.df %>%
  pivot_longer(cols = -c(cohort, sample), names_to = "signature", values_to = "num") %>%
  mutate(celltype = str_split(signature, pattern = " ", simplify = T)[,1])

signum.mtx <- signum.df %>% 
  select(-cohort, -sample) %>% as.matrix()
rownames(signum.mtx) <- signum.df$sample
```


# working with some clinical data
```{r}
clinical.data <- readRDS("../../4-cohort-NMF/intermediate_results/clinical_data_cleanup.rds")
clinical.data <- lapply(names(clinical.data), function(n) {
  df <- clinical.data[[n]]
  df <- df %>%
    mutate(cohort = n)
  df
})
clinical.data <- Reduce(rbind, clinical.data)
clinical.data <- clinical.data[complete.cases(clinical.data),]

clinical.data <- clinical.data[clinical.data$sample_id %in% intersect(clinical.data$sample_id, signum.df$sample),]
clinical.data$stage <- rep(c("metastatic", "non_metastatic"), c(5, 5))
clinical.data$sample <- clinical.data$sample_id

samples.metastatic <- clinical.data %>%
  filter(stage == "metastatic") %>%
  select(sample_id) %>%
  unlist()

samples.non.metastatic <- clinical.data %>%
  filter(stage == "non_metastatic") %>%
  select(sample_id) %>%
  unlist()
```

```{r}
png("test/metastatic.png", width = 25, height = 25, unit = "in", res = 360)
cowplot::plot_grid(plotlist = signum.profile.plist[samples.metastatic], ncol = floor(sqrt(length(signum.profile.plist[samples.metastatic]))))
dev.off()

png("test/non-metastatic.png", width = 25, height = 25, unit = "in", res = 360)
cowplot::plot_grid(plotlist = signum.profile.plist[samples.non.metastatic], ncol = floor(sqrt(length(signum.profile.plist[samples.non.metastatic]))))
dev.off()
```

```{r}
sigprofile.df.with.clinical.stage <- sigprofile.df[sigprofile.df$sample %in% c(samples.metastatic, samples.non.metastatic),]
sigprofile.df.with.clinical.stage <- full_join((clinical.data %>% select(-sample_id, -cohort, -Stage)), sigprofile.df.with.clinical.stage)

sigprofile.mtx.with.clinical.stage <- sigprofile.df.with.clinical.stage %>% select(-stage, -sample, -cohort) %>% as.matrix()
row_ha <- rowAnnotation(stage = sigprofile.df.with.clinical.stage$stage)
```

```{r}
png("test8.png", width = 10, height = 7, units = "in", res = 360)
Heatmap(sigprofile.mtx.with.clinical.stage,
        left_annotation = row_ha,
        column_split = split,
        row_split = sigprofile.df.with.clinical.stage$stage,
        name = "Signature loading",
        column_title = NULL)
dev.off()
```













